openapi: 3.0.3
info:
  title: Simple Virtual Diary API
  description: API for a virtual diary.
  version: 1.0.0
servers:
- url: http://localhost:5000/api
tags:
- name: user
  description: Operations related to users
- name: diary
  description: Operations related to diaries
- name: note
  description: Operations related to notes
paths:
  /views:
    post:
      tags:
      - diary
      summary: Create diary
      operationId: views_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/views_body'
        required: true
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-openapi-router-controller: swagger_server.controllers.diary_controller
  /views/diary-notes/{diary_id}:
    get:
      tags:
      - diary
      summary: Get diary by ID
      description: Returns detailed information about a specific diary.
      operationId: views_diary_notes_diary_id_get
      parameters:
      - name: diary_id
        in: path
        description: ID of the diary
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diary'
        "404":
          description: Diary not found
      x-openapi-router-controller: swagger_server.controllers.diary_controller
    post:
      tags:
      - note
      summary: Create a new note for a diary
      operationId: views_diary_notes_diary_id_post
      parameters:
      - name: diary_id
        in: path
        description: ID of the diary
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-openapi-router-controller: swagger_server.controllers.note_controller
    delete:
      tags:
      - diary
      summary: Delete diary by ID
      description: Cancels a specific diary and restores the item to the inventory.
      operationId: views_diary_notes_diary_id_delete
      parameters:
      - name: diary_id
        in: path
        description: ID of the diary
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful operation
        "404":
          description: Diary not found
      x-openapi-router-controller: swagger_server.controllers.diary_controller
  /user/{userId}:
    get:
      tags:
      - user
      summary: Get user by ID
      description: Returns information about a specific user.
      operationId: user_user_id_get
      parameters:
      - name: userId
        in: path
        description: ID of the user to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "401":
          description: User not authenticated
      x-openapi-router-controller: swagger_server.controllers.user_controller
    put:
      tags:
      - user
      summary: Update user by ID
      description: Updates information about a specific user.
      operationId: user_user_id_put
      parameters:
      - name: userId
        in: path
        description: ID of the user to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: Successful operation
        "401":
          description: The change was not executed
      x-openapi-router-controller: swagger_server.controllers.user_controller
    post:
      tags:
      - user
      summary: Create user
      description: Creates a new user.
      operationId: user_user_id_post
      parameters:
      - name: userId
        in: path
        description: ID of the user to create
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201_1'
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-openapi-router-controller: swagger_server.controllers.user_controller
    delete:
      tags:
      - user
      summary: Delete user by ID
      description: Deletes a specific user.
      operationId: user_user_id_delete
      parameters:
      - name: userId
        in: path
        description: ID of the user to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful operation
        "500":
          description: User not found
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /views/diary-notes/{diary_id}/notes/edit/{note_id}:
    put:
      tags:
      - note
      summary: Update note by ID
      description: Updates information about a specific note.
      operationId: views_diary_notes_diary_id_notes_edit_note_id_put
      parameters:
      - name: diary_id
        in: path
        description: ID of the diary containing the note
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: note_id
        in: path
        description: ID of the note to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      responses:
        "200":
          description: Successful operation
        "404":
          description: Note not found
      x-openapi-router-controller: swagger_server.controllers.note_controller
components:
  schemas:
    Diary:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        user_id:
          type: integer
      example:
        user_id: 6
        name: name
        id: 0
    User:
      type: object
      properties:
        userId:
          type: integer
        firstName:
          type: string
        email:
          type: string
          format: email
        password:
          maxLength: 20
          minLength: 6
          pattern: "^[a-zA-Z0-9]+$"
          type: string
      example:
        firstName: firstName
        password: password
        userId: 0
        email: ""
    Note:
      type: object
      properties:
        id:
          type: integer
        data:
          type: string
        date:
          type: string
          format: date
        user_id:
          type: integer
      example:
        date: 2000-01-23
        data: data
        user_id: 6
        id: 0
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
    views_body:
      type: object
      properties:
        userId:
          type: integer
        note_id:
          type: integer
        quantity:
          type: integer
          format: int32
    inline_response_201:
      type: object
      properties:
        diary_id:
          type: integer
          format: int64
      example:
        diary_id: 0
    inline_response_201_1:
      type: object
      properties:
        userId:
          type: integer
      example:
        userId: 0

